services:
  api:
    build: .
    container_name: user_api
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql+psycopg2://postgres:postgres@db:5432/userdb}
      JWT_SECRET: ${JWT_SECRET:-devsecretchangeit}
      JWT_EXPIRE_MINUTES: ${JWT_EXPIRE_MINUTES:-60}
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    command: ["gunicorn", "-w", "1", "-b", "0.0.0.0:8000", "app:create_app()"]
    volumes:
      - .:/app

  db:
    image: postgres:16
    container_name: user_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-userdb}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-userdb}"]
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  pgdata:
